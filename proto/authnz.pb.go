// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/authnz.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation int32

const (
	Operation_EQ       Operation = 0
	Operation_LT       Operation = 1
	Operation_GT       Operation = 2
	Operation_LTE      Operation = 3
	Operation_GTE      Operation = 4
	Operation_CONTAINS Operation = 5
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "EQ",
		1: "LT",
		2: "GT",
		3: "LTE",
		4: "GTE",
		5: "CONTAINS",
	}
	Operation_value = map[string]int32{
		"EQ":       0,
		"LT":       1,
		"GT":       2,
		"LTE":      3,
		"GTE":      4,
		"CONTAINS": 5,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_authnz_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_proto_authnz_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{0}
}

type Verdict int32

const (
	Verdict_UNKNOWN   Verdict = 0
	Verdict_DENIED    Verdict = 1
	Verdict_PERMITTED Verdict = 2
)

// Enum value maps for Verdict.
var (
	Verdict_name = map[int32]string{
		0: "UNKNOWN",
		1: "DENIED",
		2: "PERMITTED",
	}
	Verdict_value = map[string]int32{
		"UNKNOWN":   0,
		"DENIED":    1,
		"PERMITTED": 2,
	}
)

func (x Verdict) Enum() *Verdict {
	p := new(Verdict)
	*p = x
	return p
}

func (x Verdict) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Verdict) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_authnz_proto_enumTypes[1].Descriptor()
}

func (Verdict) Type() protoreflect.EnumType {
	return &file_proto_authnz_proto_enumTypes[1]
}

func (x Verdict) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Verdict.Descriptor instead.
func (Verdict) EnumDescriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{1}
}

type Principle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Principle) Reset() {
	*x = Principle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Principle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Principle) ProtoMessage() {}

func (x *Principle) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Principle.ProtoReflect.Descriptor instead.
func (*Principle) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{0}
}

func (x *Principle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Principle) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attributes []*Attribute `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{1}
}

func (x *Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Group) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{2}
}

func (x *Attribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Attribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Condition *PolicyCondition `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{3}
}

func (x *Policy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Policy) GetCondition() *PolicyCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type PolicyCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Condition:
	//	*PolicyCondition_HasAttribute
	//	*PolicyCondition_EvaluateAttribute
	//	*PolicyCondition_ContextInGroupAttributes
	//	*PolicyCondition_ContextInLiteralSet
	//	*PolicyCondition_AttributeInLiteralSet
	//	*PolicyCondition_Negation
	//	*PolicyCondition_Or
	//	*PolicyCondition_And
	Condition isPolicyCondition_Condition `protobuf_oneof:"condition"`
}

func (x *PolicyCondition) Reset() {
	*x = PolicyCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyCondition) ProtoMessage() {}

func (x *PolicyCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyCondition.ProtoReflect.Descriptor instead.
func (*PolicyCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{4}
}

func (m *PolicyCondition) GetCondition() isPolicyCondition_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (x *PolicyCondition) GetHasAttribute() *HasAttributesCondition {
	if x, ok := x.GetCondition().(*PolicyCondition_HasAttribute); ok {
		return x.HasAttribute
	}
	return nil
}

func (x *PolicyCondition) GetEvaluateAttribute() *EvaluateOPCondition {
	if x, ok := x.GetCondition().(*PolicyCondition_EvaluateAttribute); ok {
		return x.EvaluateAttribute
	}
	return nil
}

func (x *PolicyCondition) GetContextInGroupAttributes() *ContextInGroupAttributesCondition {
	if x, ok := x.GetCondition().(*PolicyCondition_ContextInGroupAttributes); ok {
		return x.ContextInGroupAttributes
	}
	return nil
}

func (x *PolicyCondition) GetContextInLiteralSet() *ContextInLiteralSetCondition {
	if x, ok := x.GetCondition().(*PolicyCondition_ContextInLiteralSet); ok {
		return x.ContextInLiteralSet
	}
	return nil
}

func (x *PolicyCondition) GetAttributeInLiteralSet() *ContextInGroupAttributesInLiteralSetCondition {
	if x, ok := x.GetCondition().(*PolicyCondition_AttributeInLiteralSet); ok {
		return x.AttributeInLiteralSet
	}
	return nil
}

func (x *PolicyCondition) GetNegation() *NegationCondition {
	if x, ok := x.GetCondition().(*PolicyCondition_Negation); ok {
		return x.Negation
	}
	return nil
}

func (x *PolicyCondition) GetOr() *OrCondition {
	if x, ok := x.GetCondition().(*PolicyCondition_Or); ok {
		return x.Or
	}
	return nil
}

func (x *PolicyCondition) GetAnd() *AndCondition {
	if x, ok := x.GetCondition().(*PolicyCondition_And); ok {
		return x.And
	}
	return nil
}

type isPolicyCondition_Condition interface {
	isPolicyCondition_Condition()
}

type PolicyCondition_HasAttribute struct {
	HasAttribute *HasAttributesCondition `protobuf:"bytes,1,opt,name=has_attribute,json=hasAttribute,proto3,oneof"`
}

type PolicyCondition_EvaluateAttribute struct {
	EvaluateAttribute *EvaluateOPCondition `protobuf:"bytes,2,opt,name=evaluate_attribute,json=evaluateAttribute,proto3,oneof"`
}

type PolicyCondition_ContextInGroupAttributes struct {
	ContextInGroupAttributes *ContextInGroupAttributesCondition `protobuf:"bytes,3,opt,name=context_in_group_attributes,json=contextInGroupAttributes,proto3,oneof"`
}

type PolicyCondition_ContextInLiteralSet struct {
	ContextInLiteralSet *ContextInLiteralSetCondition `protobuf:"bytes,4,opt,name=context_in_literal_set,json=contextInLiteralSet,proto3,oneof"`
}

type PolicyCondition_AttributeInLiteralSet struct {
	AttributeInLiteralSet *ContextInGroupAttributesInLiteralSetCondition `protobuf:"bytes,5,opt,name=attribute_in_literal_set,json=attributeInLiteralSet,proto3,oneof"`
}

type PolicyCondition_Negation struct {
	Negation *NegationCondition `protobuf:"bytes,6,opt,name=negation,proto3,oneof"`
}

type PolicyCondition_Or struct {
	Or *OrCondition `protobuf:"bytes,7,opt,name=or,proto3,oneof"`
}

type PolicyCondition_And struct {
	And *AndCondition `protobuf:"bytes,8,opt,name=and,proto3,oneof"`
}

func (*PolicyCondition_HasAttribute) isPolicyCondition_Condition() {}

func (*PolicyCondition_EvaluateAttribute) isPolicyCondition_Condition() {}

func (*PolicyCondition_ContextInGroupAttributes) isPolicyCondition_Condition() {}

func (*PolicyCondition_ContextInLiteralSet) isPolicyCondition_Condition() {}

func (*PolicyCondition_AttributeInLiteralSet) isPolicyCondition_Condition() {}

func (*PolicyCondition_Negation) isPolicyCondition_Condition() {}

func (*PolicyCondition_Or) isPolicyCondition_Condition() {}

func (*PolicyCondition_And) isPolicyCondition_Condition() {}

// check if the request(group)
type HasAttributesCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeKey []string `protobuf:"bytes,1,rep,name=attribute_key,json=attributeKey,proto3" json:"attribute_key,omitempty"`
}

func (x *HasAttributesCondition) Reset() {
	*x = HasAttributesCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasAttributesCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasAttributesCondition) ProtoMessage() {}

func (x *HasAttributesCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasAttributesCondition.ProtoReflect.Descriptor instead.
func (*HasAttributesCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{5}
}

func (x *HasAttributesCondition) GetAttributeKey() []string {
	if x != nil {
		return x.AttributeKey
	}
	return nil
}

type EvaluateOPCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeKey string    `protobuf:"bytes,1,opt,name=attribute_key,json=attributeKey,proto3" json:"attribute_key,omitempty"`
	Op           Operation `protobuf:"varint,2,opt,name=op,proto3,enum=com.github.dlshle.authnz.Operation" json:"op,omitempty"`
	Value        string    `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EvaluateOPCondition) Reset() {
	*x = EvaluateOPCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluateOPCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateOPCondition) ProtoMessage() {}

func (x *EvaluateOPCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateOPCondition.ProtoReflect.Descriptor instead.
func (*EvaluateOPCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{6}
}

func (x *EvaluateOPCondition) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

func (x *EvaluateOPCondition) GetOp() Operation {
	if x != nil {
		return x.Op
	}
	return Operation_EQ
}

func (x *EvaluateOPCondition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ContextInGroupAttributesCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextKey        string   `protobuf:"bytes,1,opt,name=context_key,json=contextKey,proto3" json:"context_key,omitempty"`
	GroupAttributeKey []string `protobuf:"bytes,2,rep,name=group_attribute_key,json=groupAttributeKey,proto3" json:"group_attribute_key,omitempty"`
}

func (x *ContextInGroupAttributesCondition) Reset() {
	*x = ContextInGroupAttributesCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextInGroupAttributesCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextInGroupAttributesCondition) ProtoMessage() {}

func (x *ContextInGroupAttributesCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextInGroupAttributesCondition.ProtoReflect.Descriptor instead.
func (*ContextInGroupAttributesCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{7}
}

func (x *ContextInGroupAttributesCondition) GetContextKey() string {
	if x != nil {
		return x.ContextKey
	}
	return ""
}

func (x *ContextInGroupAttributesCondition) GetGroupAttributeKey() []string {
	if x != nil {
		return x.GroupAttributeKey
	}
	return nil
}

type ContextInLiteralSetCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextKey string   `protobuf:"bytes,1,opt,name=context_key,json=contextKey,proto3" json:"context_key,omitempty"`
	Literal    []string `protobuf:"bytes,2,rep,name=literal,proto3" json:"literal,omitempty"`
}

func (x *ContextInLiteralSetCondition) Reset() {
	*x = ContextInLiteralSetCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextInLiteralSetCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextInLiteralSetCondition) ProtoMessage() {}

func (x *ContextInLiteralSetCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextInLiteralSetCondition.ProtoReflect.Descriptor instead.
func (*ContextInLiteralSetCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{8}
}

func (x *ContextInLiteralSetCondition) GetContextKey() string {
	if x != nil {
		return x.ContextKey
	}
	return ""
}

func (x *ContextInLiteralSetCondition) GetLiteral() []string {
	if x != nil {
		return x.Literal
	}
	return nil
}

// if certain attribute is within the string literal
type ContextInGroupAttributesInLiteralSetCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupAttributeKey string   `protobuf:"bytes,1,opt,name=group_attribute_key,json=groupAttributeKey,proto3" json:"group_attribute_key,omitempty"`
	Literal           []string `protobuf:"bytes,2,rep,name=literal,proto3" json:"literal,omitempty"`
}

func (x *ContextInGroupAttributesInLiteralSetCondition) Reset() {
	*x = ContextInGroupAttributesInLiteralSetCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextInGroupAttributesInLiteralSetCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextInGroupAttributesInLiteralSetCondition) ProtoMessage() {}

func (x *ContextInGroupAttributesInLiteralSetCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextInGroupAttributesInLiteralSetCondition.ProtoReflect.Descriptor instead.
func (*ContextInGroupAttributesInLiteralSetCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{9}
}

func (x *ContextInGroupAttributesInLiteralSetCondition) GetGroupAttributeKey() string {
	if x != nil {
		return x.GroupAttributeKey
	}
	return ""
}

func (x *ContextInGroupAttributesInLiteralSetCondition) GetLiteral() []string {
	if x != nil {
		return x.Literal
	}
	return nil
}

type NegationCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *PolicyCondition `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *NegationCondition) Reset() {
	*x = NegationCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NegationCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegationCondition) ProtoMessage() {}

func (x *NegationCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegationCondition.ProtoReflect.Descriptor instead.
func (*NegationCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{10}
}

func (x *NegationCondition) GetCondition() *PolicyCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type OrCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition []*PolicyCondition `protobuf:"bytes,1,rep,name=condition,proto3" json:"condition,omitempty"`
}

func (x *OrCondition) Reset() {
	*x = OrCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrCondition) ProtoMessage() {}

func (x *OrCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrCondition.ProtoReflect.Descriptor instead.
func (*OrCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{11}
}

func (x *OrCondition) GetCondition() []*PolicyCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type AndCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition []*PolicyCondition `protobuf:"bytes,1,rep,name=condition,proto3" json:"condition,omitempty"`
}

func (x *AndCondition) Reset() {
	*x = AndCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndCondition) ProtoMessage() {}

func (x *AndCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndCondition.ProtoReflect.Descriptor instead.
func (*AndCondition) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{12}
}

func (x *AndCondition) GetCondition() []*PolicyCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type ContextProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContextProperty) Reset() {
	*x = ContextProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextProperty) ProtoMessage() {}

func (x *ContextProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextProperty.ProtoReflect.Descriptor instead.
func (*ContextProperty) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{13}
}

func (x *ContextProperty) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ContextProperty) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrincipalId     string             `protobuf:"bytes,1,opt,name=principal_id,json=principalId,proto3" json:"principal_id,omitempty"` // Caller will be trusted that this is authentic.
	PolicyId        string             `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	ContextProperty []*ContextProperty `protobuf:"bytes,3,rep,name=context_property,json=contextProperty,proto3" json:"context_property,omitempty"`
	Verbose         bool               `protobuf:"varint,4,opt,name=verbose,proto3" json:"verbose,omitempty"`
	Consistent      bool               `protobuf:"varint,5,opt,name=consistent,proto3" json:"consistent,omitempty"`
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{14}
}

func (x *AuthorizeRequest) GetPrincipalId() string {
	if x != nil {
		return x.PrincipalId
	}
	return ""
}

func (x *AuthorizeRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *AuthorizeRequest) GetContextProperty() []*ContextProperty {
	if x != nil {
		return x.ContextProperty
	}
	return nil
}

func (x *AuthorizeRequest) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

func (x *AuthorizeRequest) GetConsistent() bool {
	if x != nil {
		return x.Consistent
	}
	return false
}

type AuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrincipalId string  `protobuf:"bytes,1,opt,name=principal_id,json=principalId,proto3" json:"principal_id,omitempty"`
	Verdict     Verdict `protobuf:"varint,2,opt,name=verdict,proto3,enum=com.github.dlshle.authnz.Verdict" json:"verdict,omitempty"`
	Consistent  bool    `protobuf:"varint,4,opt,name=consistent,proto3" json:"consistent,omitempty"`
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{15}
}

func (x *AuthorizeResponse) GetPrincipalId() string {
	if x != nil {
		return x.PrincipalId
	}
	return ""
}

func (x *AuthorizeResponse) GetVerdict() Verdict {
	if x != nil {
		return x.Verdict
	}
	return Verdict_UNKNOWN
}

func (x *AuthorizeResponse) GetConsistent() bool {
	if x != nil {
		return x.Consistent
	}
	return false
}

type AuthContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the set of properties used for authorization
	ContextProperty []*ContextProperty `protobuf:"bytes,1,rep,name=context_property,json=contextProperty,proto3" json:"context_property,omitempty"`
	// the principal id that will be authorized
	PrincipalId string `protobuf:"bytes,2,opt,name=principal_id,json=principalId,proto3" json:"principal_id,omitempty"`
}

func (x *AuthContext) Reset() {
	*x = AuthContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authnz_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthContext) ProtoMessage() {}

func (x *AuthContext) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authnz_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthContext.ProtoReflect.Descriptor instead.
func (*AuthContext) Descriptor() ([]byte, []int) {
	return file_proto_authnz_proto_rawDescGZIP(), []int{16}
}

func (x *AuthContext) GetContextProperty() []*ContextProperty {
	if x != nil {
		return x.ContextProperty
	}
	return nil
}

func (x *AuthContext) GetPrincipalId() string {
	if x != nil {
		return x.PrincipalId
	}
	return ""
}

var File_proto_authnz_proto protoreflect.FileDescriptor

var file_proto_authnz_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x22, 0x34,
	0x0a, 0x09, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64,
	0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x22, 0x33, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x61, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x47, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x06, 0x0a, 0x0f, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57,
	0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a,
	0x2e, 0x48, 0x61, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x12, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x4f, 0x50, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x7c, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x18, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x13, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x18, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6e, 0x7a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x4c, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x15, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x4c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x49, 0x0a, 0x08, 0x6e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x02, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c,
	0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x4f, 0x72, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x72, 0x12, 0x3a, 0x0a,
	0x03, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x16, 0x48, 0x61, 0x73, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x4f, 0x50, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x33, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68,
	0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x74, 0x0a,
	0x21, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x22, 0x59, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x22, 0x79,
	0x0a, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x4c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x22, 0x5c, 0x0a, 0x11, 0x4e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64,
	0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x0b, 0x4f, 0x72, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x57, 0x0a, 0x0c, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x47, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x56, 0x65,
	0x72, 0x64, 0x69, 0x63, 0x74, 0x52, 0x07, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x86,
	0x01, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x54,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x6e, 0x7a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x64, 0x2a, 0x43, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x51, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x4c, 0x54, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x4c, 0x54, 0x45, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x05, 0x2a, 0x31, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32,
	0x6e, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x4e, 0x5a, 0x12, 0x64, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e,
	0x7a, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x64, 0x6c, 0x73, 0x68, 0x6c, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x20, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6c,
	0x73, 0x68, 0x6c, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x7a, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_authnz_proto_rawDescOnce sync.Once
	file_proto_authnz_proto_rawDescData = file_proto_authnz_proto_rawDesc
)

func file_proto_authnz_proto_rawDescGZIP() []byte {
	file_proto_authnz_proto_rawDescOnce.Do(func() {
		file_proto_authnz_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_authnz_proto_rawDescData)
	})
	return file_proto_authnz_proto_rawDescData
}

var file_proto_authnz_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_authnz_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_authnz_proto_goTypes = []interface{}{
	(Operation)(0),                            // 0: com.github.dlshle.authnz.Operation
	(Verdict)(0),                              // 1: com.github.dlshle.authnz.Verdict
	(*Principle)(nil),                         // 2: com.github.dlshle.authnz.Principle
	(*Group)(nil),                             // 3: com.github.dlshle.authnz.Group
	(*Attribute)(nil),                         // 4: com.github.dlshle.authnz.Attribute
	(*Policy)(nil),                            // 5: com.github.dlshle.authnz.Policy
	(*PolicyCondition)(nil),                   // 6: com.github.dlshle.authnz.PolicyCondition
	(*HasAttributesCondition)(nil),            // 7: com.github.dlshle.authnz.HasAttributesCondition
	(*EvaluateOPCondition)(nil),               // 8: com.github.dlshle.authnz.EvaluateOPCondition
	(*ContextInGroupAttributesCondition)(nil), // 9: com.github.dlshle.authnz.ContextInGroupAttributesCondition
	(*ContextInLiteralSetCondition)(nil),      // 10: com.github.dlshle.authnz.ContextInLiteralSetCondition
	(*ContextInGroupAttributesInLiteralSetCondition)(nil), // 11: com.github.dlshle.authnz.ContextInGroupAttributesInLiteralSetCondition
	(*NegationCondition)(nil),                             // 12: com.github.dlshle.authnz.NegationCondition
	(*OrCondition)(nil),                                   // 13: com.github.dlshle.authnz.OrCondition
	(*AndCondition)(nil),                                  // 14: com.github.dlshle.authnz.AndCondition
	(*ContextProperty)(nil),                               // 15: com.github.dlshle.authnz.ContextProperty
	(*AuthorizeRequest)(nil),                              // 16: com.github.dlshle.authnz.AuthorizeRequest
	(*AuthorizeResponse)(nil),                             // 17: com.github.dlshle.authnz.AuthorizeResponse
	(*AuthContext)(nil),                                   // 18: com.github.dlshle.authnz.AuthContext
}
var file_proto_authnz_proto_depIdxs = []int32{
	4,  // 0: com.github.dlshle.authnz.Group.attributes:type_name -> com.github.dlshle.authnz.Attribute
	6,  // 1: com.github.dlshle.authnz.Policy.condition:type_name -> com.github.dlshle.authnz.PolicyCondition
	7,  // 2: com.github.dlshle.authnz.PolicyCondition.has_attribute:type_name -> com.github.dlshle.authnz.HasAttributesCondition
	8,  // 3: com.github.dlshle.authnz.PolicyCondition.evaluate_attribute:type_name -> com.github.dlshle.authnz.EvaluateOPCondition
	9,  // 4: com.github.dlshle.authnz.PolicyCondition.context_in_group_attributes:type_name -> com.github.dlshle.authnz.ContextInGroupAttributesCondition
	10, // 5: com.github.dlshle.authnz.PolicyCondition.context_in_literal_set:type_name -> com.github.dlshle.authnz.ContextInLiteralSetCondition
	11, // 6: com.github.dlshle.authnz.PolicyCondition.attribute_in_literal_set:type_name -> com.github.dlshle.authnz.ContextInGroupAttributesInLiteralSetCondition
	12, // 7: com.github.dlshle.authnz.PolicyCondition.negation:type_name -> com.github.dlshle.authnz.NegationCondition
	13, // 8: com.github.dlshle.authnz.PolicyCondition.or:type_name -> com.github.dlshle.authnz.OrCondition
	14, // 9: com.github.dlshle.authnz.PolicyCondition.and:type_name -> com.github.dlshle.authnz.AndCondition
	0,  // 10: com.github.dlshle.authnz.EvaluateOPCondition.op:type_name -> com.github.dlshle.authnz.Operation
	6,  // 11: com.github.dlshle.authnz.NegationCondition.condition:type_name -> com.github.dlshle.authnz.PolicyCondition
	6,  // 12: com.github.dlshle.authnz.OrCondition.condition:type_name -> com.github.dlshle.authnz.PolicyCondition
	6,  // 13: com.github.dlshle.authnz.AndCondition.condition:type_name -> com.github.dlshle.authnz.PolicyCondition
	15, // 14: com.github.dlshle.authnz.AuthorizeRequest.context_property:type_name -> com.github.dlshle.authnz.ContextProperty
	1,  // 15: com.github.dlshle.authnz.AuthorizeResponse.verdict:type_name -> com.github.dlshle.authnz.Verdict
	15, // 16: com.github.dlshle.authnz.AuthContext.context_property:type_name -> com.github.dlshle.authnz.ContextProperty
	16, // 17: com.github.dlshle.authnz.AuthNZ.authorize:input_type -> com.github.dlshle.authnz.AuthorizeRequest
	17, // 18: com.github.dlshle.authnz.AuthNZ.authorize:output_type -> com.github.dlshle.authnz.AuthorizeResponse
	18, // [18:19] is the sub-list for method output_type
	17, // [17:18] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_authnz_proto_init() }
func file_proto_authnz_proto_init() {
	if File_proto_authnz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_authnz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Principle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasAttributesCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluateOPCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextInGroupAttributesCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextInLiteralSetCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextInGroupAttributesInLiteralSetCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NegationCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authnz_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_authnz_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*PolicyCondition_HasAttribute)(nil),
		(*PolicyCondition_EvaluateAttribute)(nil),
		(*PolicyCondition_ContextInGroupAttributes)(nil),
		(*PolicyCondition_ContextInLiteralSet)(nil),
		(*PolicyCondition_AttributeInLiteralSet)(nil),
		(*PolicyCondition_Negation)(nil),
		(*PolicyCondition_Or)(nil),
		(*PolicyCondition_And)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_authnz_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_authnz_proto_goTypes,
		DependencyIndexes: file_proto_authnz_proto_depIdxs,
		EnumInfos:         file_proto_authnz_proto_enumTypes,
		MessageInfos:      file_proto_authnz_proto_msgTypes,
	}.Build()
	File_proto_authnz_proto = out.File
	file_proto_authnz_proto_rawDesc = nil
	file_proto_authnz_proto_goTypes = nil
	file_proto_authnz_proto_depIdxs = nil
}
